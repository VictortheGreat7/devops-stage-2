version: '3.7'

services:
  frontend:
    build:
      context: ./frontend
    container_name: frontend
    labels:
      - "traefik.http.routers.frontend.rule=Host(`ec2.mywonder.works`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls=true"
      - "traefik.http.routers.frontend.middlewares=https-redirect@file"
      - "traefik.http.services.frontend.loadbalancer.server.port=5173"
    ports:
      - "5173:80"
    restart: always

  backend:
    build:
      context: ./backend
    container_name: backend
    labels:
      - "traefik.http.routers.backend.rule=Host(`ec2.mywonder.works`) && PathPrefix(`/api`, `/docs`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls=true"
      - "traefik.http.routers.backend.middlewares=https-redirect@file"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"
    environment:
      - DATABASE_URL=postgresql://app:vagrant@db:5432/app
    depends_on:
      - db
    restart: always

  db:
    image: postgres:16
    container_name: db
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: vagrant
      POSTGRES_DB: app
    volumes:
      - db_data:/var/lib/postgresql/data
    restart: always

  adminer:
    image: adminer
    container_name: adminer
    labels:
      - "traefik.http.routers.adminer.rule=Host(`db.mywonder.works`)"
      - "traefik.http.routers.adminer.entrypoints=websecure"
      - "traefik.http.routers.adminer.tls=true"
      - "traefik.http.routers.adminer.middlewares=https-redirect@file"
      - "traefik.http.services.adminer.loadbalancer.server.port=8080"
    restart: always

  traefik:
    image: traefik:v2.4
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=your-email@example.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "letsencrypt:/letsencrypt"
      - "./traefik.toml:/etc/traefik/traefik.toml"
    restart: always

volumes:
  db_data:
  letsencrypt:
